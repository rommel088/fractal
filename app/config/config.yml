imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @BlogBundle/Resources/config/admin.xml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [BlogBundle,GuestBookBundle]
    java: /usr/bin/java
    filters:
        cssrewrite: ~
        cssembed:
          jar: %kernel.root_dir%/Resources/java/cssembed-0.4.5.jar
        yui_js:
          jar: %kernel.root_dir%/Resources/java/yuicompressor.jar
        lessphp:
          file: %kernel.root_dir%/../vendor/leafo/lessphp/lessc.inc.php
          apply_to: "\.less$"
        less:
          node: /usr/bin/node
          node_paths: [/usr/lib/node_modules]
          apply_to: "\.less$"
    assets:
        bootstrap_css:
            inputs:
                - %kernel.root_dir%/../vendor/twitter/bootstrap/less/bootstrap.less
                - %kernel.root_dir%/../vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/Resources/less/form.less
            filters:
                - less
                - cssrewrite
            output: css/bootstrap.css
        bootstrap_js:
            inputs:
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/transition.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/alert.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/button.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/carousel.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/collapse.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/dropdown.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/modal.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/tooltip.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/popover.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/scrollspy.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/tab.js
                - %kernel.root_dir%/../vendor/twitter/bootstrap/js/affix.js
                - %kernel.root_dir%/../vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/Resources/js/bc-bootstrap-collection.js
            output: js/bootstrap.js
        jquery:
            inputs:
                - %kernel.root_dir%/../vendor/jquery/jquery/jquery-1.10.2.js
                - %kernel.root_dir%/../src/Fractal/BlogBundle/Resources/public/js/jquery-2.0.2.min.js
            output: js/jquery.js

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
#        entity_managers:
#            default:
#                mappings:
#                    ApplicationSonataUserBundle: ~
#                    SonataUserBundle: ~

# Doctrine extensions
stof_doctrine_extensions:
    orm:
        default:
            timestampable: true
            sluggable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

braincrafted_bootstrap:
    output_dir:
    assets_dir: %kernel.root_dir%/../vendor/twbs/bootstrap
    jquery_path: %kernel.root_dir%/../vendor/jquery/jquery/jquery-1.10.2.js
    less_filter: less # "less", "lessphp" or "none"
    auto_configure:
        assetic: true
        twig: true
        knp_menu: true
        knp_paginator: true
    customize:
        variables_file: ~
        bootstrap_output: %kernel.root_dir%/Resources/less/bootstrap.less
        bootstrap_template: BraincraftedBootstrapBundle:Bootstrap:bootstrap.less.twig

sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)

sonata_admin:
    security:
        handler:              sonata.admin.security.handler.noop
        information:

            # Prototype
#            id:                   []
        admin_permissions:

            # Defaults:
            - CREATE
            - LIST
            - DELETE
            - UNDELETE
            - EXPORT
            - OPERATOR
            - MASTER
        object_permissions:

            # Defaults:
            - VIEW
            - EDIT
            - DELETE
            - UNDELETE
            - OPERATOR
            - MASTER
            - OWNER
        acl_user_manager:     ~         # Name of the user manager service used to retrieve ACL users
    title:                Sonata Admin
    title_logo:           bundles/sonataadmin/logo_title.png
    options:
        html5_validate:       true      # use html5 validation
        confirm_exit:         true      # enabled confirmation when quitting with unsaved changes
        use_select2:          true      # enable select2
        pager_links:          10         # pager max links to display
    dashboard:
        groups:
            acme.admin.group.content:
                label: acme.admin.group.content
                label_catalogue: FractalBlogBundle
                items:
                    - sonata.admin.articles
                    - sonata.admin.tags
                    - sonata.admin.users

            acme.admin.group.blog:
                items: ~
#                item_adds:
#                    - sonata.admin.page
                roles: [ ROLE_ONE, ROLE_TWO ]
            acme.admin.group.misc: ~
        blocks:
            - { position: left, type: sonata.admin.block.admin_list }
#            type:                 ~
#            settings:

                # Prototype
#                id:                   []
#            position:             right
    admin_services:

        # Prototype
        id:
            model_manager:        ~
            form_contractor:      ~
            show_builder:         ~
            list_builder:         ~
            datagrid_builder:     ~
            translator:           ~
            configuration_pool:   ~
            router:               ~
            validator:            ~
            security_handler:     ~
            label:                ~
    templates:
        user_block:           SonataAdminBundle:Core:user_block.html.twig
        layout:               SonataAdminBundle::standard_layout.html.twig
        ajax:                 SonataAdminBundle::ajax_layout.html.twig
        dashboard:            SonataAdminBundle:Core:dashboard.html.twig
        search:               SonataAdminBundle:Core:search.html.twig
        list:                 SonataAdminBundle:CRUD:list.html.twig
        show:                 SonataAdminBundle:CRUD:show.html.twig
        edit:                 SonataAdminBundle:CRUD:edit.html.twig
        preview:              SonataAdminBundle:CRUD:preview.html.twig
        history:              SonataAdminBundle:CRUD:history.html.twig
        acl:                  SonataAdminBundle:CRUD:acl.html.twig
        history_revision_timestamp:  SonataAdminBundle:CRUD:history_revision_timestamp.html.twig
        action:               SonataAdminBundle:CRUD:action.html.twig
        select:               SonataAdminBundle:CRUD:list__select.html.twig
        list_block:           SonataAdminBundle:Block:block_admin_list.html.twig
        search_result_block:  SonataAdminBundle:Block:block_search_result.html.twig
        short_object_description:  SonataAdminBundle:Helper:short-object-description.html.twig
        delete:               SonataAdminBundle:CRUD:delete.html.twig
        batch:                SonataAdminBundle:CRUD:list__batch.html.twig
        batch_confirmation:   SonataAdminBundle:CRUD:batch_confirmation.html.twig
        inner_list_row:       SonataAdminBundle:CRUD:list_inner_row.html.twig
        base_list_field:      SonataAdminBundle:CRUD:base_list_field.html.twig
        pager_links:          SonataAdminBundle:Pager:links.html.twig
        pager_results:        SonataAdminBundle:Pager:results.html.twig
    extensions:

        # Prototype
        id:
            admins:               []
            excludes:             []
            implements:           []
            extends:              []
            instanceof:           []
    persist_filters:      false     # set to true to persist filter settings per admin module in the user's session

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
#    user_class: Fractal\UserBundle\Entity\User
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)


sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb

security:
    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }